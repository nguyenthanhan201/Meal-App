{"version":3,"sources":["components/Navbar/Navbar.js","components/Footer/Footer.js","components/context/context.js","components/Categories/Categories.js","components/RandomMeal/RandomMeal.js","components/Loading/Loading.js","components/HomePage/HomePage.js","components/ScrollTop/Scrolltop.js","components/ButtonScrollTop/Styles.js","components/ButtonScrollTop/ScrollButton.js","App.js","index.js"],"names":["Navbar","useState","navbar","setNavbar","window","addEventListener","scrollY","collapseOnSelect","expand","bg","variant","className","Brand","href","src","alt","to","Toggle","Collapse","id","Link","Footer","myContext","createContext","AppContext","children","meals","setMeals","categories","setCategories","randoms","setRandom","inputCate","useRef","fetchHomePageMeals","useCallback","searchTerm","axios","get","then","res","data","fetchCategories","fetchRandomMeal","Provider","value","withRouter","useContext","useEffect","map","category","onClick","current","strCategory","strCategoryThumb","strCategoryDescription","idCategory","RandomMeal","meal","strMealThumb","strInstructions","idMeal","Loading","HomePage","loading","setLoading","React","show","setShow","show2","setShow2","setSearchTerm","fetchMealsHandler","setInputCate","setTimeout","modal","setIdMeal","idIngredient","ingredient","arr","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","val","index","idMeasure","measure","strMeasure1","strMeasure2","strMeasure3","strMeasure4","strMeasure5","document","body","classList","add","remove","a","autoFocus","type","placeholder","onChange","e","target","onKeyPress","key","strMeal","Dialog","open","DialogContent","DialogActions","strYoutube","url","history","unlisten","listen","scrollTo","Button","styled","h1","div","ScrollButton","visible","setVisible","scrolled","documentElement","scrollTop","top","behavior","style","visibility","opacity","App","exact","path","component","Categories","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a9789bf.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navbar.scss\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\n\r\nconst Navbar = () => {\r\n  const [navbar, setNavbar] = useState(false);\r\n\r\n  const changeBackground = () => {\r\n    if (window.scrollY >= 50) {\r\n      setNavbar(true);\r\n    } else {\r\n      setNavbar(false);\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", changeBackground);\r\n  return (\r\n    <>\r\n      {/* <div className={navbar ? \"navbar active\" : \"navbar\"}>\r\n        <div className=\"navbar-heading\">\r\n          <img\r\n            src={\"https://image.flaticon.com/icons/png/512/926/926255.png\"}\r\n            alt=\"logo\"\r\n          />\r\n          <Link to=\"/\">\r\n            {\" \"}\r\n            <h1>\r\n              Meal <span>App</span>\r\n            </h1>\r\n          </Link>\r\n        </div>\r\n        <div className=\"navbar-links\">\r\n          <ul>\r\n            <Link to=\"/\">\r\n              {\" \"}\r\n              <li>Home</li>\r\n            </Link>\r\n            <Link to=\"/categories\">\r\n              {\" \"}\r\n              <li>Categories</li>\r\n            </Link>\r\n            <Link to=\"/random\">\r\n              {\" \"}\r\n              <li>Random</li>\r\n            </Link>\r\n          </ul>\r\n        </div>\r\n      </div> */}\r\n      <ReactBootStrap.Navbar\r\n        collapseOnSelect\r\n        expand=\"lg\"\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n        className={navbar ? \"navbar active\" : \"navbar\"}\r\n      >\r\n        <ReactBootStrap.Container>\r\n          <ReactBootStrap.Navbar.Brand href=\"#home\">\r\n            <img\r\n              src={\"https://image.flaticon.com/icons/png/512/926/926255.png\"}\r\n              alt=\"logo\"\r\n            />\r\n            <Link to=\"/\">\r\n              {\" \"}\r\n              <h1>\r\n                Meal <span>App</span>\r\n              </h1>\r\n            </Link>\r\n          </ReactBootStrap.Navbar.Brand>\r\n          <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <ReactBootStrap.Nav className=\"me-auto\"></ReactBootStrap.Nav>\r\n            <ReactBootStrap.Nav>\r\n              <ReactBootStrap.Nav.Link>\r\n                <Link to=\"/\">\r\n                  {\" \"}\r\n                  <li>Home</li>\r\n                </Link>\r\n              </ReactBootStrap.Nav.Link>\r\n              <ReactBootStrap.Nav.Link>\r\n                <Link to=\"/categories\">\r\n                  {\" \"}\r\n                  <li>Categories</li>\r\n                </Link>\r\n              </ReactBootStrap.Nav.Link>\r\n              <ReactBootStrap.Nav.Link>\r\n                <Link to=\"/random\">\r\n                  {\" \"}\r\n                  <li>Random</li>\r\n                </Link>\r\n              </ReactBootStrap.Nav.Link>\r\n            </ReactBootStrap.Nav>\r\n          </ReactBootStrap.Navbar.Collapse>\r\n        </ReactBootStrap.Container>\r\n      </ReactBootStrap.Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\nimport \"./Footer.scss\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>Meal <span>App</span> 2021 &copy;</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, {\r\n  createContext,\r\n  useCallback,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const myContext = createContext();\r\n\r\nexport const AppContext = ({ children }) => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [randoms, setRandom] = useState([]);\r\n  const inputCate = useRef(\"\");\r\n\r\n  const fetchHomePageMeals = useCallback((searchTerm) => {\r\n    axios\r\n      .get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${searchTerm}`)\r\n      .then((res) => {\r\n        setMeals(res.data.meals);\r\n      });\r\n  }, []);\r\n\r\n  const fetchCategories = useCallback(() => {\r\n    axios\r\n      .get(`https://www.themealdb.com/api/json/v1/1/categories.php`)\r\n      .then((res) => {\r\n        setCategories(res.data.categories);\r\n      });\r\n  }, []);\r\n\r\n  const fetchRandomMeal = useCallback(() => {\r\n    axios\r\n      .get(`https://www.themealdb.com/api/json/v1/1/random.php`)\r\n      .then((res) => {\r\n        setRandom(res.data.meals);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <myContext.Provider\r\n      value={{\r\n        fetchHomePageMeals,\r\n        meals,\r\n        fetchCategories,\r\n        categories,\r\n        fetchRandomMeal,\r\n        randoms,\r\n        inputCate,\r\n      }}\r\n    >\r\n      {children}\r\n    </myContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport \"./Categories.scss\";\r\nimport { myContext } from \"../context/context\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst Categories = () => {\r\n  const { fetchCategories, categories, inputCate } = useContext(myContext);\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, [fetchCategories]);\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      {categories.map((category) => (\r\n        <div key={category.idCategory}>\r\n          <Link to=\"/\">\r\n            <img\r\n              onClick={() => (inputCate.current = category?.strCategory)}\r\n              src={category.strCategoryThumb}\r\n              alt=\"categories\"\r\n            />\r\n          </Link>\r\n          <h4>{category.strCategory}</h4>\r\n          <p>{category.strCategoryDescription}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Categories);\r\n","import React,{useEffect,useContext} from 'react'\r\nimport './RandomMeal.scss'\r\nimport { myContext } from '../context/context'\r\n\r\nconst RandomMeal = () => {\r\n    const {randoms,fetchRandomMeal} = useContext(myContext);\r\n\r\n    useEffect(()=>{\r\n        fetchRandomMeal();\r\n    },[fetchRandomMeal]);\r\n    return (\r\n        <div className=\"random\">\r\n            {randoms.map(meal=>(\r\n                <div key={meal.idMeal} className=\"random-grid\">\r\n                    <div className=\"random-grid-controls\">\r\n                        <img src={meal.strMealThumb} alt=\"hoa\"/>\r\n                        <button onClick={fetchRandomMeal}>Generate Another Meal</button>\r\n                    </div>\r\n\r\n                    <div className=\"random-grid-instructions\">\r\n                        <h4>Instructions</h4>\r\n                        <p>{meal.strInstructions}</p>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomMeal\r\n","import React from \"react\";\r\nimport \"./Loading.scss\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"lds-ellipsis\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState, useCallback, useContext, useEffect } from \"react\";\r\nimport \"./HomePage.scss\";\r\nimport { myContext } from \"../context/context\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport Tilt from \"react-vanilla-tilt\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport { DialogActions } from \"@material-ui/core\";\r\n\r\nconst HomePage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  const [show2, setShow2] = React.useState(false);\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const {\r\n    fetchHomePageMeals,\r\n    meals,\r\n    fetchCategories,\r\n    categories,\r\n    inputCate,\r\n    setInputCate,\r\n  } = useContext(myContext);\r\n\r\n  const fetchMealsHandler = useCallback(() => {\r\n    setLoading(true);\r\n    const timing = setTimeout(() => {\r\n      setLoading(false);\r\n    }, 2000);\r\n    return () => setTimeout(timing), fetchHomePageMeals(searchTerm);\r\n  }, [searchTerm, fetchHomePageMeals]);\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [idMeal, setIdMeal] = useState(0);\r\n\r\n  if (modal) {\r\n    document.body.classList.add(\"active-modal\");\r\n  } else {\r\n    document.body.classList.remove(\"active-modal\");\r\n  }\r\n\r\n  function idIngredient(ingredient) {\r\n    let arr = [\r\n      ingredient.strIngredient1,\r\n      ingredient.strIngredient2,\r\n      ingredient.strIngredient3,\r\n      ingredient.strIngredient4,\r\n      ingredient.strIngredient5,\r\n    ];\r\n    return (\r\n      <>\r\n        {arr.map((val, index) => (\r\n          <p key={index}>{val}</p>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function idMeasure(measure) {\r\n    let arr = [\r\n      measure.strMeasure1,\r\n      measure.strMeasure2,\r\n      measure.strMeasure3,\r\n      measure.strMeasure4,\r\n      measure.strMeasure5,\r\n    ];\r\n    return (\r\n      <>\r\n        {arr.map((val, index) => (\r\n          <p key={index}>{val}</p>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    return fetchCategories();\r\n  }, [fetchCategories]);\r\n\r\n  useEffect(async () => {\r\n    setSearchTerm(inputCate.current);\r\n  }, [inputCate.current]);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\" home-search\">\r\n        <input\r\n          autoFocus\r\n          className=\"search-control\"\r\n          type=\"text\"\r\n          placeholder=\"Type a meal...\"\r\n          value={searchTerm}\r\n          onChange={(e) => {\r\n            setSearchTerm(e.target.value);\r\n            fetchMealsHandler();\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              fetchMealsHandler();\r\n            }\r\n          }}\r\n        />\r\n        <button className=\"search-btn-meal\" onClick={fetchMealsHandler}>\r\n          <i className=\"fas fa-search\"></i>\r\n        </button>\r\n        {categories.map((category) => {\r\n          <div key={category.idCategory}>\r\n            <h4>{category.strCategory}</h4>\r\n          </div>;\r\n        })}\r\n      </div>\r\n      <div className=\"home-result\">\r\n        <div className=\"cards\">\r\n          {loading && <Loading />}\r\n          {meals ? (\r\n            !loading &&\r\n            meals.map((meal, index) => (\r\n              <div key={index} className=\"card-meal\">\r\n                <Tilt className=\"tilt\">\r\n                  <img src={meal.strMealThumb} alt=\"meal\" />\r\n                  <div className=\"card-content\">\r\n                    <div className=\"card-top\">\r\n                      <h4 className=\"card-title\">{meal.strMeal}</h4>\r\n                      <h5 className=\"card-category\">\r\n                        Category:{meal.strCategory}\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"card-bottom\">\r\n                      <button\r\n                        className=\"btn-ingredient\"\r\n                        onClick={() => {\r\n                          setShow(true);\r\n                          setIdMeal(index);\r\n                        }}\r\n                      >\r\n                        See Details{\" \"}\r\n                        <i className=\"fas fa-arrow-alt-circle-right\"></i>\r\n                      </button>\r\n                      <br />\r\n                      <button\r\n                        className=\"btn-seemore\"\r\n                        onClick={() => {\r\n                          setShow2(true);\r\n                          setIdMeal(index);\r\n                        }}\r\n                      >\r\n                        See Video <i className=\"fas fa-play\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </Tilt>\r\n\r\n                <Dialog open={show}>\r\n                  <DialogContent>\r\n                    <DialogActions>\r\n                      <button\r\n                        className=\"btn recipe-close-btn\"\r\n                        onClick={() => setShow(false)}\r\n                      >\r\n                        <i className=\"fas fa-times\" />\r\n                      </button>\r\n                    </DialogActions>\r\n                    {/* Nhung Noi Dung Phan Popup */}\r\n                    <h2 className=\"recipe-title\">{meals[idMeal].strMeal}</h2>\r\n                    <p className=\"recipe-category\">\r\n                      {meals[idMeal].strCategory}\r\n                    </p>\r\n                    <div className=\"recipe-instruct\">\r\n                      <h3>Instructions:</h3>\r\n                      <p>{meals[idMeal].strInstructions}</p>\r\n                    </div>\r\n                    <img src={meals[idMeal].strMealThumb} alt=\"meal\" />\r\n                    <table>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Ingredients</th>\r\n                          <th>Measure</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>{idIngredient(meals[idMeal])}</td>\r\n                          <td>{idMeasure(meals[idMeal])}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <a\r\n                      className=\"recipe-link\"\r\n                      onClick={() => window.open(meals[idMeal].strYoutube)}\r\n                    >\r\n                      See On <i className=\"fab fa-youtube\"></i>\r\n                    </a>\r\n                  </DialogContent>\r\n                </Dialog>\r\n\r\n                <Dialog open={show2}>\r\n                  <DialogContent>\r\n                    <DialogActions>\r\n                      <button\r\n                        className=\"btn recipe-close-btn\"\r\n                        onClick={() => setShow2(false)}\r\n                      >\r\n                        <i className=\"fas fa-times\" />\r\n                      </button>\r\n                    </DialogActions>\r\n                    <ReactPlayer url={meals[idMeal].strYoutube}></ReactPlayer>\r\n                  </DialogContent>\r\n                </Dialog>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <>\r\n              <div className=\"no-search\">\r\n                <div className=\"content\">\r\n                  <h1>DON'T CRY!</h1>\r\n                  <p>\r\n                    The page you're looking for isn't here. Hit up our homepage\r\n                    for some delicious recipe ideas. We'll clean up the spill.\r\n                  </p>\r\n                </div>\r\n                <img\r\n                  src=\"https://www.epicurious.com/static/img/error/404-1024.png\"\r\n                  alt=\"#\"\r\n                ></img>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Heading = styled.h1`\r\n  text-align: center;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  overflowy: scroll;\r\n  height: 2500px;\r\n`;\r\n\r\nexport const Button = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  left: 90%;\r\n  bottom: 80px;\r\n  height: 20px;\r\n  font-size: 3rem;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { FaArrowCircleUp } from \"react-icons/fa\";\r\nimport { Button } from \"./Styles\";\r\n\r\nconst ScrollButton = () => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const toggleVisible = () => {\r\n    const scrolled = document.documentElement.scrollTop;\r\n    if (scrolled > 150) {\r\n      setVisible(true);\r\n    } else if (scrolled <= 150) {\r\n      setVisible(false);\r\n    }\r\n  };\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"auto\",\r\n    });\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", toggleVisible);\r\n\r\n  return (\r\n    <Button>\r\n      <FaArrowCircleUp\r\n        onClick={scrollToTop}\r\n        style={{\r\n          visibility: visible ? \"visible\" : \"hidden\",\r\n          opacity: visible ? \"1\" : \"0\",\r\n        }}\r\n      />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ScrollButton;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Categories from \"./components/Categories/Categories\";\r\nimport RandomMeal from \"./components/RandomMeal/RandomMeal\";\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport ScrollTop from \"./components/ScrollTop/Scrolltop\";\r\nimport ButtonScrollTop from \"./components/ButtonScrollTop/ScrollButton\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      {\r\n        <Router>\r\n          <Navbar />\r\n          <ScrollTop />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage}></Route>\r\n            <Route exact path=\"/categories\" component={Categories}></Route>\r\n            <Route exact path=\"/random\" component={RandomMeal}></Route>\r\n          </Switch>\r\n          <ButtonScrollTop />\r\n          <Footer />\r\n        </Router>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { AppContext } from \"./components/context/context\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppContext>\r\n      <App />\r\n    </AppContext>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}